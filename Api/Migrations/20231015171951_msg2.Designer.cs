// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using huutokauppa.Data.context;

#nullable disable

namespace huutokauppa.Migrations
{
    [DbContext(typeof(Datacontext))]
    [Migration("20231015171951_msg2")]
    partial class msg2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "I want this",
                            Sender = "haggins",
                            Timestamp = new DateTime(2023, 10, 15, 17, 19, 51, 287, DateTimeKind.Utc).AddTicks(8344)
                        },
                        new
                        {
                            Id = 2,
                            Content = "how much",
                            Sender = "gayman",
                            Timestamp = new DateTime(2023, 10, 15, 17, 19, 51, 287, DateTimeKind.Utc).AddTicks(8347)
                        },
                        new
                        {
                            Id = 3,
                            Content = "do you sell winter tires",
                            Sender = "david",
                            Timestamp = new DateTime(2023, 10, 15, 17, 19, 51, 287, DateTimeKind.Utc).AddTicks(8349)
                        },
                        new
                        {
                            Id = 4,
                            Content = "no more scams!",
                            Sender = "james",
                            Timestamp = new DateTime(2023, 10, 15, 17, 19, 51, 287, DateTimeKind.Utc).AddTicks(8350)
                        },
                        new
                        {
                            Id = 5,
                            Content = "cool cars",
                            Sender = "kluuvi",
                            Timestamp = new DateTime(2023, 10, 15, 17, 19, 51, 287, DateTimeKind.Utc).AddTicks(8352)
                        });
                });

            modelBuilder.Entity("AuctionAuctionBidder", b =>
                {
                    b.Property<int>("AuctionBiddersId")
                        .HasColumnType("int");

                    b.Property<int>("AuctionsId")
                        .HasColumnType("int");

                    b.HasKey("AuctionBiddersId", "AuctionsId");

                    b.HasIndex("AuctionsId");

                    b.ToTable("AuctionAuctionBidder");
                });

            modelBuilder.Entity("AuctionBidderUser", b =>
                {
                    b.Property<int>("AuctionBiddersId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuctionBiddersId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AuctionBidderUser");
                });

            modelBuilder.Entity("AuctioneerUser", b =>
                {
                    b.Property<int>("AuctioneersId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuctioneersId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AuctioneerUser");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctioneerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctioneerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Auctions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuctioneerId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuctioneerId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("huutokauppa.Data.Models.AuctionBidder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("AuctionBidders");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Auctioneer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Auctioneers");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuctionBidderId")
                        .HasColumnType("int");

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionBidderId");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("Bids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BidAmount = 100.00m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BidAmount = 150.00m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Url = "https://example.com/1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Url = "https://example.com/2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://www.vehiclehistory.com/uploads/2009-BMW-3-Series.jpg",
                            Name = "Product 1",
                            OwnerId = 1,
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://images.unsplash.com/photo-1505740420928-5e560c06d30e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8cHJvZHVjdHxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80",
                            Name = "Product 2",
                            OwnerId = 2,
                            Price = 29.99m
                        });
                });

            modelBuilder.Entity("huutokauppa.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Vaasankatu1",
                            Email = "john@example.com",
                            Fname = "John",
                            Lname = "Doe",
                            Password = "test123",
                            Photo = "https://static.wikia.nocookie.net/lotr/images/e/e7/Gandalf_the_Grey.jpg/revision/latest?cb=20121110131754"
                        },
                        new
                        {
                            Id = 2,
                            Address = "nigstan1",
                            Email = "jane@example.com",
                            Fname = "Jane",
                            Lname = "Smith",
                            Password = "test",
                            Photo = "https://static.wikia.nocookie.net/lotr/images/c/cb/Galadriel.jpg/revision/latest?cb=20151015204512"
                        });
                });

            modelBuilder.Entity("Api.Data.Models.Message", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.Product", null)
                        .WithMany("Messages")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("AuctionAuctionBidder", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.AuctionBidder", null)
                        .WithMany()
                        .HasForeignKey("AuctionBiddersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("huutokauppa.Data.Models.Auction", null)
                        .WithMany()
                        .HasForeignKey("AuctionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuctionBidderUser", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.AuctionBidder", null)
                        .WithMany()
                        .HasForeignKey("AuctionBiddersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("huutokauppa.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuctioneerUser", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.Auctioneer", null)
                        .WithMany()
                        .HasForeignKey("AuctioneersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("huutokauppa.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Auction", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.Auctioneer", "Auctioneer")
                        .WithMany("Auctions")
                        .HasForeignKey("AuctioneerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("huutokauppa.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auctioneer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Bid", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.AuctionBidder", null)
                        .WithMany("MyBids")
                        .HasForeignKey("AuctionBidderId");

                    b.HasOne("huutokauppa.Data.Models.Auction", null)
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId");

                    b.HasOne("huutokauppa.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Photo", b =>
                {
                    b.HasOne("huutokauppa.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("huutokauppa.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.AuctionBidder", b =>
                {
                    b.Navigation("MyBids");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Auctioneer", b =>
                {
                    b.Navigation("Auctions");
                });

            modelBuilder.Entity("huutokauppa.Data.Models.Product", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
